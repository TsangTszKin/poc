import React, {Component} from 'react';import {Popconfirm} from 'antd';import '@/styles/tableAction.less';import PropTypes from 'prop-types';import {withRouter} from 'react-router-dom';import publicUtils from '@/utils/publicUtils';@withRouterclass TableAction extends Component {    constructor(props) {        super(props);        this.edit = this.edit.bind(this);        // console.log(this.props.dataId);    }    edit = () => {        // console.log(this.props);        this.props.history.push(this.props.editPath);    }    detailsMapping = () => {        // console.log(this.props);        this.props.history.push(this.props.detailsMappingPath);    }    share = () => {        console.log(this.props);        this.props.store.modal.share.setIsShow(true);        //this.props.store.getDetailForApi(this.props.dataId);        // this.props.history.push(this.props.editPath);    }    render() {        return (            <div className="table-actions">                {                    /* this.props.status == 0 ?*/                    publicUtils.isAuth("system:eventSource:deploy") ?                        <Popconfirm title={"是否确定同步?"} onConfirm={() => {                            this.props.changeStatus2(this.props.dataId, false)                        }} onCancel={() => {                        }} okText="确定" cancelText="取消">                            <icon className="iconfont icontongbu" style={style.icon} title='同步'/>                        </Popconfirm>                        :  <icon className="iconfont disabled icontongbu" style={style.icon} title='同步'/>                    /* :                     this.props.status == 1 ?                         publicUtils.isAuth("system:eventSource:deploy") ?                             <Popconfirm title={"是否确定发布？"} onConfirm={() => { this.props.changeStatus(this.props.dataId, true) }} onCancel={() => { }} okText="确定" cancelText="取消">                                 <Icon type="caret-right" title='发布' />                             </Popconfirm>                             : ''                         :                         publicUtils.isAuth("system:eventSource:deploy") ?                             <Popconfirm title={"是否确定下线?"} onConfirm={() => { this.props.changeStatus(this.props.dataId, false) }} onCancel={() => { }} okText="确定" cancelText="取消">                                 <Icon type="pause" title='下线' />                             </Popconfirm>*/                    /* : firstAction*/                }                {                    publicUtils.isAuth("system:eventSource:edit") ?                        <icon type="edit" className="iconfont iconbianji" title="编辑" style={style.icon} onClick={() => this.edit()}/>                        : <icon type="edit" className="iconfont disabled iconbianji" style={style.icon} title="编辑"/>                }                {                    publicUtils.isAuth("system:eventSource:detailsMapping") ?                        <icon className="iconfont iconweiduyingshe" title="维度映射" style={style.icon} onClick={() => this.detailsMapping()}/>                        : <icon className="iconfont disabled iconweiduyingshe" style={style.icon} title="维度映射"/>                }                {/*{                    publicUtils.isAuth("system:eventSource:share") ?                        <Icon type="share-alt" title="共享" onClick={() => this.share()}/>                        : <Icon type="share-alt" className="disabled" title="共享" />                }*/}                {                    publicUtils.isAuth("system:eventSource:delete") ?                        <Popconfirm title="是否确定删除?" onConfirm={() => {                            this.props.deleteOneIndex(this.props.dataId, this.props.status)                        }} onCancel={() => {                        }} okText="确定" cancelText="取消">                            <icon className="iconfont iconshanchu" style={style.icon} title="删除"/>                        </Popconfirm>                        : <icon className="iconfont disabled iconshanchu" style={style.icon} title="删除"/>                }            </div>        )    }}TableAction.propTypes = {    editPath: PropTypes.bool,    status: PropTypes.number,    changeStatus: PropTypes.func,    deleteOne: PropTypes.func,    dataId: PropTypes.string}TableAction.defaultProps = {    editPath: false,    status: 4,    changeStatus: () => {    },    deleteOne: () => {    },    dataId: ''}const style = {    icon: {        cursor: 'pointer',        marginRight: '10px'    }}export default TableAction