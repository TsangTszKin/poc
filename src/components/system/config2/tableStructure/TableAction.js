import React, {Component} from 'react';import {Popconfirm} from 'antd';import '@/styles/tableAction.less';import PropTypes from 'prop-types';import {withRouter} from 'react-router-dom';import variable from '@/filters/variable';import publicUtils from '@/utils/publicUtils';import {inject, observer} from "mobx-react/index";@withRouter@inject('store')@observerclass TableAction extends Component {    constructor(props) {        super(props);        this.edit = this.edit.bind(this);        // this.sync = this.sync.bind(this);        // console.log(this.props.dataId);    }    edit = () => {        // console.log(this.props);        this.props.history.push(this.props.editPath);    }    detail = () => {        // console.log(this.props);        this.props.history.push(this.props.detailPath);    }    /* sync = () => {         this.props.store.modal.sync.setIsShow(true);     }*/    render() {        return (            <div className="table-action">                {                    this.props.status === 0 ?                        publicUtils.isAuth("system:tableStructure:view") ?                            <icon className="iconfont icontongbu" style={style.icon} title="同步"                                  onClick={() => this.props.changeModal(true, this.props.dataId, this.props.status)}/>                            :  <icon className="iconfont disabled icontongbu" style={style.icon} title='同步'/>                        :  <icon className="iconfont disabled icontongbu" style={style.icon} title='同步'/>                }                {                    this.props.status !== 1 ?                        publicUtils.isAuth("system:tableStructure:edit") ?                            <icon type="edit" className="iconfont iconbianji" style={style.icon} title="编辑" onClick={() => this.edit()}/>                            : <icon type="edit" className="iconfont disabled iconbianji" style={style.icon} title="编辑" />                        :<icon type="edit" className="iconfont disabled iconbianji" style={style.icon} title="编辑" />                }                {                        publicUtils.isAuth("system:tableStructure:detail") ?                            <icon className="iconfont iconxiangqing" style={style.icon} title="详情" onClick={() => this.detail()}/>                            :  <icon className="iconfont disabled iconxiangqing" style={style.icon} title="详情" />                }                {                    publicUtils.isAuth("system:tableStructure:delete") ?                        <Popconfirm title="是否确定删除?" onConfirm={() => {                            this.props.deleteOne(this.props.dataId, this.props.status)                        }} onCancel={() => {                        }} okText="确定" cancelText="取消">                            <icon className="iconfont iconshanchu" style={style.icon} title="删除"/>                        </Popconfirm>                        : <icon className="iconfont disabled iconshanchu" style={style.icon} title="删除"/>                }            </div>        )    }}TableAction.propTypes = {    editPath: PropTypes.bool,    status: PropTypes.number,    changeStatus: PropTypes.func,    deleteOne: PropTypes.func,    dataId: PropTypes.string}TableAction.defaultProps = {    editPath: false,    status: 4,    changeStatus: () => {    },    deleteOne: () => {    },    dataId: ''}const style = {    icon: {        cursor: 'pointer',        marginRight: '10px'    }}export default TableAction